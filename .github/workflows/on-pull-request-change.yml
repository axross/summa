name: On Pull Request Create
on:
  - pull_request
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: '14'
      - name: Restore/cache npm packages
        uses: actions/cache@v2
        env:
          cache-name: npm-packages
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Install npm packages
        run: npm ci
      - name: Build
        run: npm run build
      - name: Upload Build Output
        uses: actions/upload-artifact@v2
        with:
          name: build-output
          path: public
  deploy:
    name: Deploy Snapshot
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: '14'
      - name: Restore/Cache npm Packages
        uses: actions/cache@v2
        env:
          cache-name: npm-packages
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Install npm Packages
        run: npm ci
      - name: Download Build Output
        uses: actions/download-artifact@v2
        with:
          name: build-output
      - name: Deploy to Netlify
        id: netlify-deploy
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_ACCESS_TOKEN }}
        run: |
          output_json=$(npx --no-install netlify deploy --json)
          echo "::debug::$output_json"
# echo "::set-output name=output-json::$output_json"
      - name: Find Deploy Result Comment
        id: find-deploy-result-comment
        uses: peter-evans/find-comment@v1
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-author: 'github-actions[bot]'
          body-includes: has been deployed to Netlify. 
      - name: Comment Deploy Result
        uses: peter-evans/create-or-update-comment@v1
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-id: ${{ steps.find-deploy-result-comment.outputs.comment-id }}
          body: |
            :rocket: Commit `${{ github.event.pull_request.head.sha }}` has been deployed to Netlify.
            
            - URL: ${{ fromJSON(steps.netlify-deploy.outputs.output-json).deploy_url }}
            - Logs: ${{ fromJSON(steps.netlify-deploy.outputs.output-json).logs }}
