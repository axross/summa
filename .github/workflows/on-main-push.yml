name: Release
on:
  push:
    branches:
      - main
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: "14"
      - name: Restore/cache npm packages
        uses: actions/cache@v2
        env:
          cache-name: npm-packages
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Install npm packages
        run: npm ci
      - name: Build
        env:
          VERSION: ${{ github.event.pull_request.head.sha }}
        run: npm run build
      - name: Upload Build Artifact
        uses: actions/upload-artifact@v2
        with:
          name: build
          path: |
            netlify
            public
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: "14"
      - name: Restore/cache npm packages
        uses: actions/cache@v2
        env:
          cache-name: npm-packages
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Install npm packages
        run: npm ci
      - name: Download Build Artifact
        uses: actions/download-artifact@v2
        with:
          name: build
      - name: Deploy to Netlify
        id: netlify-deploy
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
        run: echo "::set-output name=output_json::$(npx --no-download netlify deploy --prod --message \"${{ github.event.pull_request.head.sha }}\" --json | tr -d '\n')"
  release:
    name: Release
    runs-on: ubuntu-latest
    needs:
      - deploy
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: "14"
      - name: Restore/cache npm packages
        uses: actions/cache@v2
        env:
          cache-name: npm-packages
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Install npm packages
        run: npm ci
      - name: Semantic Release
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: npx --no-install semantic-release
