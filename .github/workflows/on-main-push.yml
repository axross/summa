name: Release
on:
  push:
    branches:
      - main
jobs:
  dry-build:
    name: Dry Build
    runs-on: ubuntu-latest
    environment: GitHub Actions Dry Build
    env:
      NEXT_PUBLIC_VERSION: ${{ github.sha }}
      NEXT_PUBLIC_RELEASE_STAGE: ${{ secrets.NEXT_PUBLIC_RELEASE_STAGE }}
      NEXT_PUBLIC_SELF_ORIGIN: ${{ secrets.NEXT_PUBLIC_SELF_ORIGIN }}
      NEXT_PUBLIC_SIMPLE_LOCALIZE_TOKEN: ${{ secrets.NEXT_PUBLIC_SIMPLE_LOCALIZE_TOKEN }}
      GITHUB_CONTENT_REPO: ${{ secrets._GITHUB_CONTENT_REPO }}
      GITHUB_CONTENT_REF: ${{ secrets._GITHUB_CONTENT_REF }}
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: '14'
      - name: Restore/cache npm packages
        uses: actions/cache@v2
        env:
          cache-name: cache-npm-packages
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Install npm packages
        run: npm ci
      - name: Dry Build
        run: npm run build
  release:
    name: Release
    runs-on: ubuntu-latest
    needs:
      - dry-build
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: '14'
      - name: Create Vercel Project JSON
        run: mkdir .vercel && echo '${{ secrets.VERCEL_PROJECT_JSON }}' > .vercel/project.json
      - name: Install Semantic Release
        run: npm i semantic-release @semantic-release/exec conventional-changelog-conventionalcommits
      - name: Semantic Release
        id: semantic-release
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: npx --no-install semantic-release
      - name: Deploy to Netlify
        run: |
          npx --no-install netlify deploy \
            --prod \
            --auth=${{ secrets.NETLIFY_ACCESS_TOKEN }} \
            --json
